// 183:練習concat(連接兩個陣列)、include(判斷陣列有沒有這個元素，如果有回傳true)、indexof(回傳要找的元素在哪個位置)、以及reverse(顛倒陣列的所有元素)


// 184:練習slice(抓出陣列索引值的內容)、Splice(也是抓出索引值的內容，只不過可以刪除新增)以及sort(分類)\
let animal = ["狗", "貓", "馬", "天竺鼠", "老鼠~"];
// 包含開始，不包含結束
let animal1 = animal.slice(0, 3);
document.write(animal1);
// 在第一個索引值左邊新增一個狼的元素，並從第一個索引值本身刪除0個索引值
let animal2 = animal.splice(1, 0, "狼");
document.write(animal2)

let number = [-1, 21, 46, 78, 58, 100, 2500];
// sort他會以第一個數字的大小做排序，因此100跟78他會判斷第一個數字，7>1所以他會顯示78比100大，這樣是錯的
console.log(number.sort());

//185:說明陣列當中的絕對相對路徑
'hi' === 'hi' //在字串當中他們是true，是相等的
['hi', 'bye'] === ['hi', 'bye'] //但在陣列中是不一樣，原因在於他們的記憶體裡的位置是放在不同地方，陣列的相等不是看內容，而是看放的位置空間一不一樣
let nums = [1, 2, 3]
let numCopys = nums
nums === numCopys //這樣他們才會是true，當其中一個變數的值被更改時，另一個也會跟著變動，代表他們是共用同一個位置，這樣才會是true(相等的)

//186:const在陣列當中的用途，他固定住外觀，也就是陣列存放在記憶體的位置，但裡面的空間是可以隨意更改的
const add = [1, 2, 3, 4];
add = [4, 5, 6, 7]; //不能這樣改，他會重新分配位置，會顯示錯誤
add.push(5);  //可以這樣改
add[0] = 2;  //也可以這樣改

//187:在array裡面還可以放array，且是很常見的用法
let gameBoard = [["X", "O", "X"], ["O", null, "X"], ["O", "O", "X"]];